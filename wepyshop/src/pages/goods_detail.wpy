<style lang="less">
// 富文本插件wxParse
@import '../plugins/wxParse/wxParse.wxss';
// 2.0 这里写样式
.swiper,
.swiper-img {
  width: 750rpx;
  height: 720rpx;
}

.product-info {
  height: 300rpx;
  background-color: #fff;
  padding: 0 16rpx;
}
.product-head {
  height: 38rpx;
  padding: 40rpx 0;
  .price {
    color: #ff2d4a;
    font-size: 50rpx;
    margin-left: -10rpx;
  }
  .old-price {
    color: #999;
    font-size: 26rpx;
  }
}
.product-body {
  display: flex;
  align-items: center;
  justify-content: space-between;
  .product-name {
    font-size: 34rpx;
    width: 546rpx;
    height: 88rpx;
    line-height: 1.3;
    /* 多行文字隐藏省略号 */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .product-like {
    width: 50rpx;
    height: 78rpx;
    border-left: 1rpx solid #ddd;
    padding-left: 46rpx;
    margin-right: 30rpx;
    color: #999;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
  }
  .icon-shoucang {
    width: 32rpx;
    height: 32rpx;
    margin-top: 10rpx;
  }
}

.product-foot {
  font-size: 30rpx;
  color: #999;
  margin-top: 34rpx;
}

.part {
  background-color: #fff;
  margin: 20rpx 0;
  font-size: 32rpx;
  color: #999;

  &-item {
    display: flex;
    padding: 28rpx 16rpx;
    position: relative;
    align-items: center;
  }

  &-line:after {
    content: '';
    height: 1rpx;
    width: 734rpx;
    background-color: #ddd;
    display: block;
    position: absolute;
    bottom: -1rpx;
  }
  .note {
    color: #333;
    margin-right: 40rpx;
  }
  .description {
    width: 490rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
  }
  .icon-jiantouyou {
    width: 25rpx;
    height: 25rpx;
    color: #ccc;
    position: absolute;
    right: 46rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.tabs-head {
  height: 100rpx;
  background-color: #fff;
  display: flex;
}
.tabs-head .tabs-item {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30rpx;
  position: relative;
}
.tabs-head .active {
  color: #ff2d4a;
  font-weight: 400;
}
.tabs-head .active:after {
  content: '';
  height: 12rpx;
  width: 100%;
  background-color: #ff2d4a;
  position: absolute;
  left: 0;
  bottom: 0;
}
.tabs-body {
  padding: 16rpx;
  padding-bottom: 250rpx;
}
.param-item {
  padding: 30rpx 0;
  font-size: 28rpx;
  display: flex;
  align-items: center;
}
.param-item .note {
  width: 150rpx;
  color: #999;
}
.param-item .description {
  width: 568rpx;
  line-height: 1.3;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.fixed-bar .item {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.fixed-bar .item .iconfont {
  width: 40rpx;
  height: 40rpx;
  font-size: 40rpx;
  color: #999;
}

.fixed-bar .item .item-note {
  margin-top: 10rpx;
  font-size: 22rpx;
  color: #666;
}
.fixed-bar .btn-group {
  display: flex;
}
.fixed-bar .btn {
  width: 213rpx;
  height: 98rpx;
  line-height: 98rpx;
  text-align: center;
  font-size: 30rpx;
  color: #fff;
}
.yellow-button {
  background-color: #ffb400;
}
.red-button {
  background-color: #ff2d4a;
}

.wxParse-content {
  padding: 55rpx;

  .wxParse-a {
    display: none;
  }
}
// 联系客服按钮
.contact-btn {
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
}
.fixed-bar .item {
  position: relative;
}
</style>
<template>
  <!-- 1.0 这里写结构 -->
  <!-- 商品详情页 -->
    <swiper class="swiper"
      indicator-dots="true"
      indicator-color="rgba(255,255,255,.5)"
      indicator-active-color="#ffffff"
      interval="2500"
      autoplay="true"
      circular="true">
      <block wx:for="{{goodsDetail.pics}}" wx:key="index">
        <swiper-item @tap="previewImageHandle({{item.pics_big}})">
          <image class="swiper-img" src="{{ item.pics_big }}" />
        </swiper-item>
      </block>
    </swiper>
    <view class="product-info">
        <view class="product-head">
            <text class="price">￥{{ goodsDetail.goods_price }}</text>
        </view>
        <view class="product-body">
          <view class="product-name">
              {{ goodsDetail.goods_name }}
          </view>
          <view class="product-like">
              <view class="iconfont icon-shoucang"></view>
              <view>收藏</view>
          </view>
        </view>
        <view class="product-foot">
            快递：<text>免运费</text>
        </view>
    </view>
    <view class="part">
      <view class="part-item part-line">
          <text class="note">促销</text><text class="description color-main">满300减30元</text>
      </view>
      <view class="part-item">
          <text class="note">已选</text><text class="description">黑色/S/1件</text>
      </view>
    </view>
    <view class="part">
        <view class="part-item">
            <text class="note">送至</text><text class="description">广东省广州市天河区珠吉路58号津安创意园传智播客</text>
            <view class="iconfont icon-jiantouyou"></view>
        </view>
    </view>

    <view class="tabs">
        <view class="tabs-head">
            <view class="tabs-item {{tabsActiveIndex == 0? 'active': ''}}" @tap="switchTabsHandle({{0}})">
                图文详情
            </view>
            <view class="tabs-item {{tabsActiveIndex == 1? 'active': ''}}" @tap="switchTabsHandle({{1}})">
                规格参数
            </view>
        </view>
        <view class="tabs-body">
          <!-- 图文展示, wxPare模板 -->
            <view class="tabs-content" hidden="{{tabsActiveIndex != 0 }}">
              <!--引入 WXML 模板 -->
              <import src="/plugins/wxParse/wxParse.wxml"/>
              <!-- 这里data中article为bindName -->
              <template is="wxParse" data="{{wxParseData:article.nodes}}"></template>
            </view>
            <view class="tabs-content" hidden="{{tabsActiveIndex != 1 }}">
              <!-- 规格参数列表 -->
                <view class="param-item" wx:for="{{goodsDetail.attrs}}" wx:key="index">
                    <text class="note">{{item.attr_name}}</text>
                    <text class="description">{{item.attr_value}}</text>
                </view>
            </view>
        </view>
    </view>

    <view class="fixed-bar">
        <view class="item">
            <button open-type	="contact" class="contact-btn">客服按钮</button>
            <view class="iconfont icon-kefu"></view>
            <text class="item-note">联系客服</text>
        </view>
        <view class="item" @tap="goToCartTabBar">
            <view class="iconfont icon-gouwuche"></view>
            <text class="item-note">购物车</text>
        </view>
        <view class="btn-group">
            <view class="btn yellow-button" @tap="addCarHandle">加入购物车</view>
            <view class="btn red-button">立即购买</view>
        </view>
    </view>
</template>

<script>
// 这里写JS
import wepy from 'wepy'
// 导入API
import api from '../api/api'
// 导入富文本插件
import WxParse from '../plugins/wxParse/wxParse.js'
// 首字母大写
export default class GoodsDetail extends wepy.page {
  // 这里写JSON配置项
  config = {
    navigationBarTitleText: '商品详情'
  }
  data = {
    goodsDetail: null,
    tabsActiveIndex: 0 // 商品详情和规格参数切换 设置默认值
  }

  methods = {
    // 去掉加入wxPage富文本后出现的警告
    wxParseImgLoad() {},
    // 使用图片预览
    previewImageHandle(currentImg) {
      let previewImageArr = []
      this.goodsDetail.pics.forEach(item => {
        previewImageArr.push(item.pics_big)
      })
      wepy.previewImage({
        current: currentImg, // 当前显示图片的http链接
        urls: previewImageArr // 需要预览的图片http链接列表
      })
    },
    // 商品详情和规格参数切换
    switchTabsHandle(index) {
      this.tabsActiveIndex = index
    },
    // 购物车跳转
    goToCartTabBar() {
      wepy.switchTab({ url: '/pages/cart' })
    },
    // 添加商品到购物车,额外添加记录数量的属性和选中状态的属性
    addCarHandle() {
      let goodsCartInfo = {}
      let keys = ['goods_id', 'goods_name', 'goods_price', 'goods_small_logo']
      keys.forEach((item, index) => {
        // goodsCartInfo[item[index]] = this.GoodsDetail[keys[index]]
        goodsCartInfo[item] = this.goodsDetail[item]
      })
      console.log(goodsCartInfo)
      // 额外添加数据 ,API-数据缓存-本地储存同步接口,不能使用对象形式,会存不进去,使用键值对
      // let cartDataArr = []
      // wepy.setStorageSync('key',goodsCartInfo)
      // cartDataArr.push(key)
      // 本地存储分购物车是否已有商品进行判断
      let cartDataArr = wepy.getStorageSync('cartDataArr') || []
      // 封装方法 校验goods_id是否存在本地
      let goodsCartIndex = this._goodsCheckInCartGoodsId(
        goodsCartInfo.goods_id,
        cartDataArr
      )
      console.log(goodsCartIndex)
      // 根据本地是否有商品进行添加
      goodsCartInfo.selectStatus = true // 选中
      if (goodsCartIndex === -1) {
        goodsCartInfo.goods_number = 1
        cartDataArr.push(goodsCartInfo)
      } else {
        // 如果存在 ++
        cartDataArr[goodsCartIndex].goods_number++
      }
      wepy.setStorageSync('cartDataArr', cartDataArr)
      // 成功添加-提示
      wepy.showToast({
        mask: true,
        title: '添加成功',
        icon: 'success',
        duration: 1500
      })
    }
  }
  // 封装私有方法
  _goodsCheckInCartGoodsId(goodsId, cartDataArr) {
    let goodsCartIndex = -1 // 假设购物车不存在商品
    for (let i = 0; i < cartDataArr.length; i++) {
      if (cartDataArr[i].goods_id === goodsId) {
        goodsCartIndex = i
        break
      }
    }
    return goodsCartIndex
  }

  // 在onLoad中才能传入参数 options为页面参数
  onLoad(options) {
    console.log('onLoad', options)
    // 获取数据
    api
      .getGoodsDetail({
        data: { goods_id: options.goods_id }
      })
      .then(res => {
        console.log(res)
        this.goodsDetail = res.data
        this.$apply()
        // 富文本插件wxPage 数据绑定
        var parseData = this.goodsDetail.goods_introduce
        var that = this
        WxParse.wxParse('article', 'html', parseData, that, 5)
      })
  }
}
</script>
